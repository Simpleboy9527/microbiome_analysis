xlab(NULL)+
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 2,face = "bold"),
legend.title = element_text(size = 2,face = "bold")) +
ylab(name) +
geom_signif(comparisons = compaired,
family =  "bold",
size = 0.5,
textsize= 2,
step_increase = 0.05,
map_signif_level = TRUE,
test = t.test)
return(p)
}
#exmaple
shannon <- "exmaple/shannon_vector.qza"
compaired <- list(c("subject-1", "subject-2"))
metadata <- read.table("exmaple/metadata.tsv",header = T,sep = "\t")
colnames(metadata)[7] <- "group"
p1 <- alpha_plot(shannon,metadata,compaired = compaired,level = c("C","PP"),color_value = c('
subject-1' = 'red', 'subject-2' = 'blue'))
ggsave("shannon.png",p1,width = 2, height = 2, units = "in")
p1 <- alpha_plot(shannon,metadata,compaired = compaired,level = c("subject-1","subject-2"),color_value = c('
subject-1' = 'red', 'subject-2' = 'blue'))
ggsave("shannon.png",p1,width = 2, height = 2, units = "in")
p1 <- alpha_plot(shannon,metadata,compaired = compaired,level = c("subject-1","subject-2"),color_value = c('subject-1' = 'red', 'subject-2' = 'blue'))
ggsave("shannon.png",p1,width = 2, height = 2, units = "in")
distance_qza <- "exmaple/bray_curtis_pcoa_results.qza"
distance <- read_qza(distance_qza)$data
View(distance)
distance_qza <- "exmaple/bray_curtis_distance_matrix.qza"
View(metadata)
distance_pcoa_site <- read_qza(distance_pcoa_qza)$data
distance_pcoa_qza <- "exmaple/bray_curtis_pcoa_results.qza"
distance_qza <- "exmaple/bray_curtis_distance_matrix.qza"
distance_pcoa_site <- read_qza(distance_pcoa_qza)$data
distance_pcoa <- read_qza(distance_qza )$data
View(distance_pcoa_site)
View(distance)
distance_pcoa <- as.data.frame(read_qza(distance_qza)$data)
View(distance_pcoa)
distance_pcoa <- as.data.frame(read_qza(distance_qza)$data)
distance_qza <- "exmaple/bray_curtis_distance_matrix.qza"
distance_pcoa <- as.data.frame(read_qza(distance_qza)$data)
View(distance_pcoa)
distance_pcoa <- read_qza(distance_qza)
View(distance_pcoa)
distance_pcoa[["data"]]
distance_pcoa <- as.dist(read_qza(distance_qza)$data)
distance_pcoa
#PERMANOVA test
beta_pcoa_stat(distance_qza, metadata, "group", "beta_pcoa_stat.txt")
table_qza <- "exmaple/table-deblur.qza"
# 结果文件默认见beta_pcoa_stat.txt
table <- read_qza(table_qza)$data
View(table)
summary(metadata)
# 结果文件默认见beta_pcoa_stat.txt
table <- t(read_qza(table_qza)$data)
View(table)
View(metadata)
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
p_list <- c("ggplot2", "qiime2R","dplyr","vegan")
# Loop through each package in the list
for (p in p_list) {
# Check if the package is already installed
if (!requireNamespace(p)) {
# If not installed, install the package
install.packages(p)
}
# Load the package into the current R session
suppressWarnings(suppressMessages(library(p, character.only = TRUE)))
}
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune.div$aov.tab$SumsOfSqs
View(dune.div)
dune.div <- adonis2(t(table) ~ group, data = metadata, permutations = 999, method="bray")
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
table_qza <- "exmaple/raref-filtered-table.qzv"
# 结果文件默认见beta_pcoa_stat.txt
table <- t(read_qza(table_qza)$data)
metadata_20230922 <- read.delim("C:/Users/16236/Desktop/code/16s/exmaple/metadata_20230922.txt")
View(metadata_20230922)
table_qza <- "exmaple/filtered-table-49728-noAST.qza"
# 结果文件默认见beta_pcoa_stat.txt
table <- t(read_qza(table_qza)$data)
dune.div <- adonis2(table ~ group, data = metadata_20230922, permutations = 999, method="bray")
dune.div
View(table)
View(metadata)
View(metadata_20230922)
table_qza <- "exmaple/filtered-sample-table.qza"
metadata_20231122 <- read.delim("C:/Users/16236/Desktop/code/16s/exmaple/metadata_20231122.txt")
View(metadata_20231122)
# 结果文件默认见beta_pcoa_stat.txt
table <- t(read_qza(table_qza)$data)
dune.div <- adonis2(table ~ group, data = metadata_20231122, permutations = 999, method="bray")
dune.div
table_qza <- "exmaple/filtered-table.qza"
# 结果文件默认见beta_pcoa_stat.txt
table <- t(read_qza(table_qza)$data)
dune.div <- adonis2(table ~ group, data = metadata_20231122, permutations = 999, method="bray")
dune.div
table <- table[order(rownames(table)),]
View(table)
table <- table[c(13:18,7:12),]
dune.div <- adonis2(table ~ group, data = metadata_20231122, permutations = 999, method="bray")
dune.div
View(table)
table_qza <- "exmaple/filtered-table.qza"
# 结果文件默认见beta_pcoa_stat.txt
table <- t(as.data.frame(read_qza(table_qza)$data))
table <- table[order(rownames(table)),]
View(table)
table <- table[c(13:18,7:12),]
table_qza <- "exmaple/filtered-table.qza"
# 结果文件默认见beta_pcoa_stat.txt
table <- t(as.data.frame(read_qza(table_qza)$data))
table <- table[order(rownames(table)),]
table <- table[c(13:18,1:12),]
dune.div <- adonis2(table ~ group, data = metadata_20231122, permutations = 999, method="bray")
dune.div
table_qza <- "exmaple/filtered-table-49728-noAST.qza"
# 结果文件默认见beta_pcoa_stat.txt
table <- t(as.data.frame(read_qza(table_qza)$data))
table <- table[order(rownames(table)),]
View(table)
View(metadata_20230922)
dune.div <- adonis2(table ~ group, data = metadata_20230922, permutations = 999, method="bray")
dune.div
sample_columns <- grep("^sample", colnames(metadata), value = TRUE) #获取样品列
asv_qza <- "exmaple/table-deblur.qza"
# 结果文件默认见beta_pcoa_stat.txt
table <- t(as.data.frame(read_qza(asv_qza)$data))
table[metadata$sample_columns,]
View(table)
View(metadata)
table <- table[metadata$sample_columns,]
View(table)
#使table的行名按照metadata的样品列的顺序排列
table <- table[rownames(table) %in% metadata[,sample_columns],,drop = F]
# 结果文件默认见beta_pcoa_stat.txt
table <- t(as.data.frame(read_qza(asv_qza)$data))
#使table的行名按照metadata的样品列的顺序排列
table <- table[rownames(table) %in% metadata[,sample_columns],,drop = F]
View(table)
#使table的行名按照metadata的样品列的顺序排列
table$sampleid <- rownames(table)
table <- table[match(metadata[,sample_columns],table$sampleid),]
View(table)
# 结果文件默认见beta_pcoa_stat.txt
table <- as.data.frame(read_qza(asv_qza)$data)
table <- t(table)
table <- as.data.frame(t(table))
# 结果文件默认见beta_pcoa_stat.txt
table <- as.data.frame(read_qza(asv_qza)$data)
table <- as.data.frame(t(table))
#使table的行名按照metadata的样品列的顺序排列
table$sampleid <- rownames(table)
table <- table[match(metadata[,sample_columns],table$sampleid),]
match(metadata[,sample_columns],table$sampleid)
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
table <- table[,-"sampleid"]
table <- table[,-ncol(table)]
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune_adonis <- paste0("adonis R2: ",round(dune.div$R2,2), "; P-value: ", dune.div$`Pr(>F)`)
dune_adonis
distance <- read_qza(distance_qza)$data
x_label<-round(distance$ProportionExplained[1]*100,2) #获取PCoA1的解释度
distance_qza <- "exmaple/bray_curtis_pcoa_results.qza"
distance <- read_qza(distance_qza)$data
View(distance)
x_label<-round(distance$ProportionExplained[1]*100,2) #获取PCoA1的解释度
x_label
y_label<-round(distance$ProportionExplained[2]*100,2) #获取PCoA2的解释度
y_label
distance_vectors <- distance$Vectors #获取PCoA坐标
sample_columns <- grep("^sample", colnames(metadata), value = TRUE) #获取样品列
distance_vectors <- data[rownames(data) %in% metadata[,sample_columns],,drop = F]
View(distance_vectors)
View(metadata)
View(distance_vectors)
distance_vectors$group <- metadata$group[match(rownames(distance_vectors), metadata[,sample_columns])] #添加分组信息
View(distance_vectors)
p <- ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = Group)) +
theme_classic()+# Use color aesthetic for points
scale_color_manual(values = c('C' = 'red', 'PP' = 'blue')) +  # Set point colors
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%"),
caption = "Additional Text in Legend") +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = Group),
alpha = 0.3) +
scale_fill_manual(values = c("#e31a1c", "#1f78b4"))+
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))
p
p <- ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = Group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%"),
caption = "Additional Text in Legend") +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = Group),
alpha = 0.3) +
scale_fill_manual(values = c("#e31a1c", "#1f78b4"))+
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))
p
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = Group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%"),
caption = "Additional Text in Legend") +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
scale_fill_manual(values = c("#e31a1c", "#1f78b4"))+
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%"),
caption = "Additional Text in Legend") +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
scale_fill_manual(values = c("#e31a1c", "#1f78b4"))+
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))
View(distance_vectors)
distance_qza <- "exmaple/bray_curtis_pcoa_results.qza"
distance <- read_qza(distance_qza)$data
View(distance)
x_label<-round(distance$ProportionExplained[1]*100,2) #获取PCoA1的解释度
x_label
y_label<-round(distance$ProportionExplained[2]*100,2) #获取PCoA2的解释度
y_label
distance_vectors <- distance$Vectors #获取PCoA坐标
sample_columns <- grep("^sample", colnames(metadata), value = TRUE) #获取样品列
View(metadata)
View(metadata)
sample_columns <- grep("^sample", colnames(metadata), value = TRUE) #获取样品列
distance_vectors <- distance_vectors[distance_vectors$SampleID %in% metadata[,sample_columns],,drop = F]
distance_vectors$group <- metadata$group[match(distance_vectors$SampleID, metadata[,sample_columns])] #添加分组信息
View(distance_vectors)
distance_vectors
p <- ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%"),
caption = "Additional Text in Legend") +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
scale_fill_manual(values = c("#e31a1c", "#1f78b4"))+
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%"),
caption = "Additional Text in Legend") +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
scale_fill_manual(values = c("#e31a1c", "#1f78b4"))+
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%"),
caption = "Additional Text in Legend") +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%"),
caption = dune_adonis) +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))
dune.div
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%")) +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))+
annotate(dune_adonis, x = 1, y = 8, label = "Additional Text", size = 8)
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%")) +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))+
geom_text(aes(x = 1, y = 8, label = dune_adonis) size = 8)
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%")) +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))+
geom_text(aes(x = 1, y = 8, label = dune_adonis), size = 8)
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%")) +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))+
annotate("text", x = 1, y = 8, label = dune_adonis, size = 4, color = "red")
ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%")) +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))+
annotate("text", x = 1, y = -1, label = dune_adonis)
beta_cpp <- function(distance_qza,asv_qza,metadata){
p_list <- c("ggplot2", "qiime2R","dplyr","vegan")
# Loop through each package in the list
for (p in p_list) {
# Check if the package is already installed
if (!requireNamespace(p)) {
# If not installed, install the package
install.packages(p)
}
# Load the package into the current R session
suppressWarnings(suppressMessages(library(p, character.only = TRUE)))
}
table <- as.data.frame(read_qza(asv_qza)$data)
table <- as.data.frame(t(table))
sample_columns <- grep("^sample", colnames(metadata), value = TRUE) #获取样品列
#使table的行名按照metadata的样品列的顺序排列
table$sampleid <- rownames(table)
table <- table[match(metadata[,sample_columns],table$sampleid),]
table <- table[,-ncol(table)]
dune.div <- adonis2(table ~ group, data = metadata, permutations = 999, method="bray")
dune.div
dune_adonis <- paste0("adonis R2: ",round(dune.div$R2,2), "; P-value: ", dune.div$`Pr(>F)`)
distance <- read_qza(distance_qza)$data
x_label<-round(distance$ProportionExplained[1]*100,2) #获取PCoA1的解释度
x_label
y_label<-round(distance$ProportionExplained[2]*100,2) #获取PCoA2的解释度
y_label
distance_vectors <- distance$Vectors #获取PCoA坐标
sample_columns <- grep("^sample", colnames(metadata), value = TRUE) #获取样品列
distance_vectors <- distance_vectors[distance_vectors$SampleID %in% metadata[,sample_columns],,drop = F]
distance_vectors$group <- metadata$group[match(distance_vectors$SampleID, metadata[,sample_columns])] #添加分组信息
distance_vectors
p <- ggplot(distance_vectors, aes(x = round(distance_vectors$PC1,digits = 2), y = PC2)) +
geom_point(size = 1.5, aes(color = group)) +
theme_classic()+# Use color aesthetic for points
geom_vline(xintercept = 0, lty = "dashed") +
geom_hline(yintercept = 0, lty = "dashed") +
labs(x = paste0("PCoA1 ", x_label, "%"),
y = paste0("PCoA2 ", y_label, "%")) +
stat_ellipse(data = distance_vectors,
geom = "polygon",
aes(fill = group),
alpha = 0.3) +
theme(axis.title = element_text(size = 8,face = "bold"),
axis.text = element_text(size = 8,face = "bold"),
legend.text = element_text(size = 8,face = "bold"),
legend.title = element_text(size = 8,face = "bold"),
panel.border = element_rect(fill=NA,color="black", size=.5, linetype="solid"))
result <- list(p,dune.div)
}
